pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
         agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps{
                withSonarQubeEnv('sonarserver'){ 


              sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ojokebs_week16-oj-code' 

             // sh 'mvn sonar:sonar'

            }
        }
    }
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            }
        } 
        stage('upload artifact'){
            steps{

                sh 'curl -uadmin:AP5mZ1TGxbfJg5s8o7m1rRSRP4i -T \
                target/bio*.jar \
                "http://ec2-34-238-126-35.compute-1.amazonaws.com:8081/artifactory/geo-app/"'

            }
        }
        stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 693685356193.dkr.ecr.us-east-1.amazonaws.com '
                sh 'docker build -t geoapp .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 693685356193.dkr.ecr.us-east-1.amazonaws.com/geo-app:latest'
                sh 'docker push 693685356193.dkr.ecr.us-east-1.amazonaws.com/geo-app:latest'
            }
        }
        
    }
}
