pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages{
        stage('sonarqube scan'){
         agent {docker { image 'maven:3-amazoncorretto-17-debian' }}
            steps{
                withSonarQubeEnv('sonarQube'){ 


              sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ojokebs_week16-oj-code-Dsonar.organization=ojokebs -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=0727452cab6fd1b4168f814ef9b79dc7aa39cb80
'
             // sh 'mvn sonar:sonar'

            }
        }
    }
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            }
        } 
        stage('upload artifact'){
            steps{

                sh 'curl -uadmin:AP5mZ1TGxbfJg5s8o7m1rRSRP4i -T \
                target/bio*.jar \
                "http://34.227.173.196:8081/artifactory/geoapp/"'

            }
        }
        stage('image build'){
            steps{
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 076892551558.dkr.ecr.us-east-1.amazonaws.com '
                sh 'docker build -t geoapp .'
            }
        }
        stage('push image'){
            steps{
                sh 'docker tag geoapp:latest 076892551558.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
                sh 'docker push 076892551558.dkr.ecr.us-east-1.amazonaws.com/geoapp:latest'
            }
        }
        
    }
}
